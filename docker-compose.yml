version: '3.9'

services:
  app:
    build:
      context: .
      dockerfile: .docker/dev/php/Dockerfile
    container_name: app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
      PHP_IDE_CONFIG: "serverName=DevServer"
      WORKING_DIR: /var/www/html
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html

  web-server:
    image: nginx:latest
    container_name: web-server
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
    volumes:
      - ./:/var/www/html
      - ./.docker/dev/web/nginx.conf:/etc/nginx/conf.d/default.conf

  db:
    container_name: db
    image: postgres:13-alpine3.15
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=user
      - POSTGRES_DB=public
      - PGPORT=5432
    ports:
      - ${POSTGRES_ADDRESS:-127.0.0.1:5432}:5432

  amqp:
    image: rabbitmq:3-management-alpine
    container_name: amqp
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-15}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

volumes:
###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
